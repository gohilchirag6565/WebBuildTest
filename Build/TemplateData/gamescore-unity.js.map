{"version":3,"file":"gamescore-unity.js","mappings":"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","sources":["webpack://gamescore_unity/./src/GameScoreUnity.js","webpack://gamescore_unity/./src/index.js"],"sourcesContent":["export default class GameScoreUnity {\r\n    constructor(gs, unity) {\r\n        this.gs = gs;\r\n        this.unity = unity;\r\n\r\n        document.addEventListener(\"touchstart\", () => {\r\n            container.focus();\r\n            window.focus();\r\n            canvas.focus();\r\n            console.log(\"Click - Touch\");\r\n        });\r\n\r\n        document.addEventListener(\"pointerdown\", () => {\r\n            container.focus();\r\n            window.focus();\r\n            canvas.focus();\r\n            console.log(\"pointer down\");\r\n        });\r\n\r\n        this.gs.player.ready.then(() => {\r\n            this.trigger('CallPlayerReady');\r\n        });\r\n\r\n        this.gs.player.on('change', () => this.trigger('CallPlayerChange'));\r\n        this.gs.player.on('sync', (success) => {\r\n            this.trigger(success ? 'CallPlayerSyncComplete' : 'CallPlayerSyncError');\r\n        });\r\n        this.gs.player.on('load', (success) => {\r\n            this.trigger(success ? 'CallPlayerLoadComplete' : 'CallPlayerLoadError');\r\n        });\r\n        this.gs.player.on('login', (success) => {\r\n            this.trigger(success ? 'CallPlayerLoginComplete' : 'CallPlayerLoginError');\r\n        });\r\n\r\n        this.gs.player.on('fetchFields', (success) => {\r\n            if (success) {\r\n                this.trigger('CallPlayerFetchFieldsComplete', JSON.stringify(this.gs.player.fields.map((field) => ({ ...field, defaultValue: field.default }))));\r\n            } else {\r\n                this.trigger('CallPlayerFetchFieldsError');\r\n            }\r\n        });\r\n\r\n        // leaderboard\r\n        this.gs.leaderboard.on('open', () => this.trigger('CallLeaderboardOpen'));\r\n\r\n        // achievements\r\n        this.gs.achievements.on('open', () => this.trigger('CallAchievementsOpen'));\r\n        this.gs.achievements.on('close', () => {\r\n            this.trigger('CallAchievementsClose');\r\n            window.focus();\r\n        });\r\n\r\n        this.gs.achievements.on('unlock', () => this.trigger('CallAchievementsUnlock'));\r\n        this.gs.achievements.on('error:unlock', () => this.trigger('CallAchievementsUnlockError'));\r\n\r\n        // games collections\r\n        this.gs.gamesCollections.on('open', () => this.trigger('CallGamesCollectionsOpen'));\r\n        this.gs.gamesCollections.on('close', () => {\r\n            this.trigger('CallGamesCollectionsClose');\r\n            window.focus();\r\n        });\r\n\r\n        // fullscreen\r\n        this.gs.fullscreen.on('open', () => this.trigger('CallFullscreenOpen'));\r\n        this.gs.fullscreen.on('close', () => this.trigger('CallFullscreenClose'));\r\n        this.gs.fullscreen.on('change', () => this.trigger('CallFullscreenChange'));\r\n\r\n        // ads\r\n        this.gs.ads.on('start', () => this.trigger('CallAdsStart'));\r\n        this.gs.ads.on('close', (success) => {\r\n            this.trigger('CallAdsClose', success);\r\n            window.focus();\r\n        });\r\n\r\n        this.gs.ads.on('fullscreen:start', () => this.trigger('CallAdsFullscreenStart'));\r\n        this.gs.ads.on('fullscreen:close', (success) => this.trigger('CallAdsFullscreenClose', success));\r\n\r\n        this.gs.ads.on('preloader:start', () => this.trigger('CallAdsPreloaderStart'));\r\n        this.gs.ads.on('preloader:close', (success) => this.trigger('CallAdsPreloaderClose', success));\r\n\r\n        this.gs.ads.on('rewarded:start', () => this.trigger('CallAdsRewardedStart'));\r\n        this.gs.ads.on('rewarded:close', (success) => this.trigger('CallAdsRewardedClose', (success)));\r\n        this.gs.ads.on('rewarded:reward', () => this.trigger('CallAdsRewardedReward', this.lastRewardedTag));\r\n\r\n        this.gs.ads.on('sticky:start', () => this.trigger('CallAdsStickyStart'));\r\n        this.gs.ads.on('sticky:close', () => this.trigger('CallAdsStickyClose'));\r\n        this.gs.ads.on('sticky:refresh', () => this.trigger('CallAdsStickyRefresh'));\r\n        this.gs.ads.on('sticky:render', () => this.trigger('CallAdsStickyRender'));\r\n\r\n        // socials\r\n        this.gs.socials.on('share', (success) => this.trigger('CallSocialsShare', success));\r\n        this.gs.socials.on('post', (success) => this.trigger('CallSocialsPost', success));\r\n        this.gs.socials.on('invite', (success) => this.trigger('CallSocialsInvite', success));\r\n        this.gs.socials.on('joinCommunity', (success) => this.trigger('CallSocialsJoinCommunity', success));\r\n\r\n        // gs\r\n        this.gs.on('change:language', (lang) => this.trigger('CallChangeLanguage', lang));\r\n        this.gs.on('change:avatarGenerator', (ag) => this.trigger('CallChangeAvatarGenerator', ag));\r\n        this.gs.on('overlay:ready', () => this.trigger('CallOverlayReady'));\r\n    }\r\n    trigger(eventName, value) {\r\n\r\n        this.unity.SendMessage('GameScoreSDK', eventName, this.toUnity(value));\r\n    }\r\n\r\n    toUnity(value) {\r\n        switch (typeof (value)) {\r\n            case 'boolean': {\r\n                return String(value);\r\n            }\r\n            case 'number': {\r\n                return value;\r\n            }\r\n            case 'string': {\r\n                return value;\r\n            }\r\n            case 'object': {\r\n                return JSON.stringify(value);\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n\r\n    Language() {\r\n        return this.gs.language;\r\n    }\r\n    AvatarGenerator() {\r\n        return this.gs.avatarGenerator;\r\n    }\r\n    PlatformType() {\r\n        return this.gs.platform.type;\r\n    }\r\n    PlatformHasIntegratedAuth() {\r\n        return this.toUnity(this.gs.platform.hasIntegratedAuth);\r\n    }\r\n    PlatformIsExternalLinksAllowed() {\r\n        return this.toUnity(this.gs.platform.isExternalLinksAllowed);\r\n    }\r\n\r\n    AppTitle() {\r\n        return this.gs.app.title;\r\n    }\r\n    AppDescription() {\r\n        return this.gs.app.description;\r\n    }\r\n    AppImage() {\r\n        return this.gs.app.image;\r\n    }\r\n    AppUrl() {\r\n        return this.gs.app.url;\r\n    }\r\n\r\n\r\n    PlayerGetID() {\r\n        return this.gs.player.id;\r\n    }\r\n\r\n    PlayerGetScore() {\r\n        return this.gs.player.score;\r\n    }\r\n    PlayerSetScore(score) {\r\n        this.gs.player.score = Number(score);\r\n    }\r\n    PlayerAddScore(score) {\r\n        this.gs.player.score += Number(score);\r\n    }\r\n\r\n    PlayerGetName() {\r\n        return this.gs.player.name;\r\n    }\r\n    PlayerSetName(name) {\r\n        this.gs.player.name = name;\r\n    }\r\n\r\n    PlayerGetAvatar() {\r\n        return this.gs.player.avatar;\r\n    }\r\n    PlayerSetAvatar(src) {\r\n        this.gs.player.avatar = src;\r\n    }\r\n\r\n    PlayerGet(key) {\r\n        return this.toUnity(this.gs.player.get(key));\r\n    }\r\n\r\n    PlayerSet(key, value) {\r\n        this.gs.player.set(key, value);\r\n    }\r\n    PlayerAdd(key, value) {\r\n        this.gs.player.add(key, Number(value));\r\n    }\r\n\r\n    PlayerHas(key) {\r\n        return this.toUnity(this.gs.player.has(key));\r\n    }\r\n\r\n    PlayerSetFlag(key, value) {\r\n        this.gs.player.set(key, !Boolean(value));\r\n    }\r\n    PlayerToggle(key) {\r\n        this.gs.player.toggle(key);\r\n    }\r\n\r\n    PlayerGetFieldName(key) {\r\n        return this.gs.player.getFieldName(key);\r\n    }\r\n    PlayerGetFieldVariantName(key, value) {\r\n        return this.gs.player.getFieldVariantName(key, value);\r\n    }\r\n    PlayerGetFieldVariantAt(key, index) {\r\n        const variant = this.gs.player.getField(key).variants[index];\r\n        return variant ? variant.value : '';\r\n    }\r\n    PlayerGetFieldVariantIndex(key, value) {\r\n        return this.gs.player.getField(key).variants.findIndex((v) => v.value === value);\r\n    }\r\n\r\n    PlayerReset() {\r\n        this.gs.player.reset();\r\n    }\r\n    PlayerRemove() {\r\n        this.gs.player.remove();\r\n    }\r\n    PlayerSync(override = false) {\r\n        return this.gs.player.sync({ override: Boolean(override) });\r\n    }\r\n    PlayerLoad() {\r\n        return this.gs.player.load();\r\n    }\r\n    PlayerLogin() {\r\n        return this.gs.player.login();\r\n    }\r\n    PlayerFetchFields() {\r\n        this.gs.player.fetchFields();\r\n    }\r\n\r\n    PlayerIsLoggedIn() {\r\n        return this.toUnity(this.gs.player.isLoggedIn);\r\n    }\r\n\r\n    PlayerHasAnyCredentials(key) {\r\n        return this.toUnity(this.gs.player.hasAnyCredentials);\r\n    }\r\n\r\n    PlayerIsStub(key) {\r\n        return this.toUnity(this.gs.player.isStub);\r\n    }\r\n\r\n\r\n    LeaderboardOpen(orderBy, order, limit, withMe, includeFields, displayFields) {\r\n        return this.gs.leaderboard\r\n            .open({\r\n                id: this.gs.player.id,\r\n                orderBy: orderBy\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n                order,\r\n                limit: Number(limit),\r\n                withMe,\r\n                includeFields: includeFields\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n                displayFields: displayFields\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n            })\r\n            .catch(console.warn);\r\n    }\r\n\r\n    LeaderboardFetch(tag, orderBy, order, limit, withMe, includeFields) {\r\n        return this.gs.leaderboard\r\n            .fetch({\r\n                id: this.gs.player.id,\r\n                orderBy: orderBy\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n                order,\r\n                limit: Number(limit),\r\n                withMe,\r\n                includeFields: includeFields\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n            })\r\n            .then((leaderboardInfo) => {\r\n                // this.lastLeaderboardTag = tag;\r\n                // this.leaderboard = leaderboardInfo.players;\r\n\r\n                this.trigger('CallLeaderboardFetchTag', tag);\r\n                this.trigger('CallLeaderboardFetch', JSON.stringify(leaderboardInfo.players));\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                // this.lastLeaderboardTag = tag;\r\n                this.trigger('CallLeaderboardFetchError');\r\n            });\r\n    }\r\n\r\n    LeaderboardFetchPlayerRating(tag, orderBy, order) {\r\n        return this.gs.leaderboard\r\n            .fetchPlayerRating({\r\n                id: this.gs.player.id,\r\n                orderBy: orderBy\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n                order,\r\n            })\r\n            .then((result) => {\r\n                // this.lastLeaderboardPlayerRatingTag = tag;\r\n                // this.leaderboardPlayerPosition = result.player.position;\r\n                this.trigger('CallLeaderboardFetchPlayerTag', tag);\r\n                this.trigger('CallLeaderboardFetchPlayer', result.player.position);\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                // this.lastLeaderboardPlayerRatingTag = tag;\r\n                this.trigger('CallLeaderboardFetchPlayerError');\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    /* LEADER BOARD SCOPED */\r\n\r\n    LeaderboardScopedOpen(id, tag, variant, order, limit, withMe, includeFields, displayFields) {\r\n        return this.gs.leaderboard\r\n            .openScoped({\r\n                id: Number(id),\r\n                tag,\r\n                variant,\r\n                order,\r\n                limit: Number(limit),\r\n                includeFields: includeFields\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n                displayFields: displayFields\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n                withMe,\r\n            })\r\n            .catch(console.warn);\r\n    }\r\n\r\n    LeaderboardScopedFetch(id, tag, variant, order, limit, includeFields, withMe) {\r\n        return this.gs.leaderboard\r\n            .fetchScoped({\r\n                id: Number(id),\r\n                tag,\r\n                variant,\r\n                order,\r\n                limit: Number(limit),\r\n                includeFields: includeFields\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n                withMe,\r\n            })\r\n            .then((leaderboardScopedInfo) => {\r\n                // Для чего эти 2 строки, нужны ли они?\r\n                // this.lastLeaderboardTag = tag;\r\n                // this.leaderboard = leaderboardScopedInfo.players;\r\n\r\n\r\n                this.trigger('CallLeaderboardScopedFetchTag', tag);\r\n                this.trigger('CallLeaderboardScopedFetchVariant', variant);\r\n                this.trigger('CallLeaderboardScopedFetch', JSON.stringify(leaderboardScopedInfo.players));\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                // this.lastLeaderboardTag = tag;\r\n                this.trigger('CallLeaderboardScopedFetchError');\r\n            });\r\n    }\r\n\r\n    LeaderboardScopedPublishRecord(id, tag, variant, override, Score, Level, Exp) {\r\n        return this.gs.leaderboard\r\n            .publishRecord({\r\n                id: Number(id),\r\n                tag,\r\n                variant,\r\n                override: Boolean(override),\r\n                record: {\r\n                    score: Number(Score),\r\n                    level: Number(Level),\r\n                    exp: Number(Exp),\r\n                },\r\n\r\n            })\r\n            .then(() => {\r\n                this.trigger('CallLeaderboardScopedPublishRecordComplete');\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallLeaderboardScopedPublishRecordError');\r\n            });\r\n    }\r\n\r\n    LeaderboardScopedFetchPlayerRating(id, tag, variant, includeFields) {\r\n        return this.gs.leaderboard\r\n            .fetchPlayerRatingScoped({\r\n                id: Number(id),\r\n                tag,\r\n                variant,\r\n                includeFields: includeFields\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n            })\r\n            .then((result) => {\r\n                // this.lastLeaderboardPlayerRatingTag = tag;\r\n                // this.leaderboardPlayerPosition = result.player.position;\r\n\r\n                this.trigger('CallLeaderboardScopedFetchPlayerTag', tag);\r\n                this.trigger('CallLeaderboardScopedFetchPlayerVariant', variant);\r\n                this.trigger('CallLeaderboardScopedFetchPlayer', result.player.position);\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                // this.lastLeaderboardPlayerRatingTag = tag;\r\n                this.trigger('CallLeaderboardFetchPlayerError');\r\n            });\r\n    }\r\n    /* LEADER BOARD SCOPED */\r\n\r\n\r\n\r\n    AchievementsOpen() {\r\n        return this.gs.achievements.open().catch(console.warn);\r\n    }\r\n    AchievementsFetch() {\r\n        return this.gs.achievements\r\n            .fetch()\r\n            .then((result) => {\r\n                // this.achievements = result.achievements;\r\n                // this.achievementsGroups = result.achievementsGroups;\r\n                // this.playerAchievements = result.playerAchievements;\r\n\r\n                this.trigger('CallAchievementsFetch', JSON.stringify(result.achievements));\r\n                this.trigger('CallAchievementsFetchGroups', JSON.stringify(result.achievementsGroups));\r\n                this.trigger('CallPlayerAchievementsFetch', JSON.stringify(result.playerAchievements));\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallAchievementsFetchError');\r\n            });\r\n    }\r\n    AchievementsUnlock(idOrTag) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gs.achievements\r\n            .unlock(query)\r\n            .then((result) => {\r\n                // this.isUnlockAchievementSuccess = result.success;\r\n                // this.unlockAchievementError = result.error || '';\r\n\r\n                // const achievement = result.achievement || {};\r\n                // this.unlockedAchievementId = achievement.id || 0;\r\n                // this.unlockedAchievementTag = achievement.tag || '';\r\n                // this.unlockedAchievementName = achievement.name || '';\r\n                // this.unlockedAchievementDescription = achievement.description || '';\r\n                // this.unlockedAchievementIcon = achievement.icon || '';\r\n                // this.unlockedAchievementIconSmall = achievement.iconSmall || '';\r\n                // this.unlockedAchievementRare = achievement.rare || 'COMMON';\r\n\r\n                if (result.success) {\r\n                    this.trigger('CallAchievementsUnlock', idOrTag);\r\n                    return;\r\n                }\r\n\r\n                this.trigger('CallAchievementsUnlockError');\r\n            })\r\n\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallAchievementsUnlockError');\r\n            });\r\n    }\r\n    PaymentsFetchProducts() {\r\n        return this.gs.payments\r\n            .fetchProducts()\r\n            .then((result) => {\r\n                // this.products = result.products;\r\n                // this.playerPurchases = result.playerPurchases;\r\n                this.trigger('CallPaymentsFetchProducts', JSON.stringify(result.products));\r\n                this.trigger('CallPaymentsFetchPlayerPurcahses', JSON.stringify(result.playerPurchases));\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallPaymentsFetchProductsError');\r\n            });\r\n    }\r\n    PaymentsPurchase(idOrTag) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gs.payments\r\n            .purchase(query)\r\n            .then((result) => {\r\n                // this.isPurchaseProductSuccess = result.success;\r\n                // this.purchaseProductError = result.error || '';\r\n\r\n                // const product = result.product || {};\r\n                // this.purchasedProductId = product.id || 0;\r\n                // this.purchasedProductTag = product.tag || '';\r\n\r\n                if (result.success) {\r\n                    this.trigger('CallPaymentsPurchase', idOrTag);\r\n                    window.focus();\r\n                    return;\r\n                }\r\n\r\n                this.trigger('CallPaymentsPurchaseError');\r\n\r\n                window.focus();\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallPaymentsPurchaseError');\r\n                window.focus();\r\n            });\r\n    }\r\n    PaymentsConsume(idOrTag) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gs.payments\r\n            .consume(query)\r\n            .then((result) => {\r\n                // this.isConsumeProductSuccess = result.success;\r\n                // this.consumeProductError = result.error || '';\r\n\r\n                // const product = result.product || {};\r\n                // this.consumedProductId = product.id || 0;\r\n                // this.consumedProductTag = product.tag || '';\r\n\r\n                if (result.success) {\r\n                    this.trigger('CallPaymentsConsume', idOrTag);\r\n                    window.focus();\r\n                    return;\r\n                }\r\n\r\n                this.trigger('CallPaymentsConsumeError');\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallPaymentsConsumeError');\r\n            });\r\n    }\r\n\r\n\r\n    PaymentsIsAvailable() {\r\n        return this.toUnity(this.gs.payments.isAvailable);\r\n    }\r\n\r\n\r\n    FullscreenOpen() {\r\n        return this.gs.fullscreen.open();\r\n    }\r\n    FullscreenClose() {\r\n        return this.gs.fullscreen.close();\r\n    }\r\n    FullscreenToggle() {\r\n        return this.gs.fullscreen.toggle();\r\n    }\r\n    AdsShowFullscreen() {\r\n        return this.gs.ads.showFullscreen();\r\n    }\r\n    AdsShowRewarded(idOrTag) {\r\n        this.lastRewardedTag = idOrTag;\r\n        return this.gs.ads.showRewardedVideo();\r\n    }\r\n    AdsShowPreloader() {\r\n        return this.gs.ads.showPreloader();\r\n    }\r\n    AdsShowSticky() {\r\n        return this.gs.ads.showSticky();\r\n    }\r\n    AdsCloseSticky() {\r\n        return this.gs.ads.closeSticky();\r\n    }\r\n    AdsRefreshSticky() {\r\n        return this.gs.ads.refreshSticky();\r\n    }\r\n\r\n\r\n    AdsIsAdblockEnabled() {\r\n        return this.toUnity(this.gs.ads.isAdblockEnabled);\r\n    }\r\n\r\n    AdsIsStickyAvailable() {\r\n        return this.toUnity(this.gs.ads.isStickyAvailable);\r\n    }\r\n    AdsIsFullscreenAvailable() {\r\n        return this.toUnity(this.gs.ads.isFullscreenAvailable);\r\n    }\r\n    AdsIsRewardedAvailable() {\r\n        return this.toUnity(this.gs.ads.isRewardedAvailable);\r\n    }\r\n    AdsIsPreloaderAvailable() {\r\n        return this.toUnity(this.gs.ads.isPreloaderAvailable);\r\n    }\r\n\r\n\r\n    AdsIsStickyPlaying() {\r\n        return this.toUnity(this.gs.ads.isStickyPlaying);\r\n    }\r\n    AdsIsFullscreenPlaying() {\r\n        return this.toUnity(this.gs.ads.isFullscreenPlaying);\r\n    }\r\n    AdsIsRewardedPlaying() {\r\n        return this.toUnity(this.gs.ads.isRewardedPlaying);\r\n    }\r\n    AdsIsPreloaderPlaying() {\r\n        return this.toUnity(this.gs.ads.isPreloaderPlaying);\r\n    }\r\n\r\n\r\n    AnalyticsHit(url) {\r\n        return this.gs.analytics.hit(url);\r\n    }\r\n    AnalyticsGoal(event, value) {\r\n        return this.gs.analytics.goal(event, value);\r\n    }\r\n    SocialsShare(text, url, image) {\r\n        return this.gs.socials.share({ text, url, image });\r\n    }\r\n    SocialsPost(text, url, image) {\r\n        return this.gs.socials.post({ text, url, image });\r\n    }\r\n    SocialsInvite(text, url, image) {\r\n        return this.gs.socials.invite({ text, url, image });\r\n    }\r\n    SocialsJoinCommunity() {\r\n        return this.gs.socials.joinCommunity();\r\n    }\r\n    SocialsCommunityLink() {\r\n        return this.toUnity(this.gs.socials.communityLink);\r\n    }\r\n\r\n\r\n    SocialsIsSupportsNativeShare() {\r\n        return this.toUnity(this.gs.socials.isSupportsNativeShare);\r\n    }\r\n    SocialsIsSupportsNativePosts() {\r\n        return this.toUnity(this.gs.socials.isSupportsNativePosts);\r\n    }\r\n    SocialsIsSupportsNativeInvite() {\r\n        return this.toUnity(this.gs.socials.isSupportsNativeInvite);\r\n    }\r\n    SocialsCanJoinCommunity() {\r\n        return this.toUnity(this.gs.socials.canJoinCommunity);\r\n    }\r\n    SocialsIsSupportsNativeCommunityJoin() {\r\n        return this.toUnity(this.gs.socials.isSupportsNativeCommunityJoin);\r\n    }\r\n\r\n    // games collections\r\n    GamesCollectionsOpen(idOrTag) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag || 'ANY' };\r\n        return this.gs.gamesCollections.open(query);\r\n    }\r\n    GamesCollectionsFetch(idOrTag) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gs.gamesCollections\r\n            .fetch(query)\r\n            .then((result) => {\r\n                // this.lastGamesCollectionIdOrTag = idOrTag;\r\n                // this.gamesCollection = result;\r\n                this.trigger('CallGamesCollectionsFetchTag', idOrTag);\r\n                this.trigger('CallGamesCollectionsFetch', JSON.stringify(result));\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                // this.lastGamesCollectionIdOrTag = idOrTag;\r\n                // this.gamesCollectionFetchError = (err && err.message) || '';\r\n                this.trigger('CallGamesCollectionsFetchError');\r\n            });\r\n    }\r\n\r\n    ChangeLanguage(language) {\r\n        return this.gs.changeLanguage(language);\r\n    }\r\n    ChangeLanguageByCode(language = '') {\r\n        return this.gs.changeLanguage(language.toLowerCase());\r\n    }\r\n    ChangeAvatarGenerator(generator) {\r\n        return this.gs.changeAvatarGenerator(generator);\r\n    }\r\n    LoadOverlay() {\r\n        return this.gs.loadOverlay();\r\n    }\r\n}\r\n\r\nwindow.GameScoreUnity = GameScoreUnity;\r\n","import GameScoreUnity from './GameScoreUnity'\r\n\r\nwindow.GameScoreUnity = GameScoreUnity;\r\n"],"names":["GameScoreUnity","constructor","gs","unity","this","document","addEventListener","container","focus","window","canvas","console","log","player","ready","then","trigger","on","success","JSON","stringify","fields","map","field","defaultValue","default","leaderboard","achievements","gamesCollections","fullscreen","ads","lastRewardedTag","socials","lang","ag","eventName","value","SendMessage","toUnity","String","Language","language","AvatarGenerator","avatarGenerator","PlatformType","platform","type","PlatformHasIntegratedAuth","hasIntegratedAuth","PlatformIsExternalLinksAllowed","isExternalLinksAllowed","AppTitle","app","title","AppDescription","description","AppImage","image","AppUrl","url","PlayerGetID","id","PlayerGetScore","score","PlayerSetScore","Number","PlayerAddScore","PlayerGetName","name","PlayerSetName","PlayerGetAvatar","avatar","PlayerSetAvatar","src","PlayerGet","key","get","PlayerSet","set","PlayerAdd","add","PlayerHas","has","PlayerSetFlag","Boolean","PlayerToggle","toggle","PlayerGetFieldName","getFieldName","PlayerGetFieldVariantName","getFieldVariantName","PlayerGetFieldVariantAt","index","variant","getField","variants","PlayerGetFieldVariantIndex","findIndex","v","PlayerReset","reset","PlayerRemove","remove","PlayerSync","override","sync","PlayerLoad","load","PlayerLogin","login","PlayerFetchFields","fetchFields","PlayerIsLoggedIn","isLoggedIn","PlayerHasAnyCredentials","hasAnyCredentials","PlayerIsStub","isStub","LeaderboardOpen","orderBy","order","limit","withMe","includeFields","displayFields","open","split","o","trim","filter","f","catch","warn","LeaderboardFetch","tag","fetch","leaderboardInfo","players","err","LeaderboardFetchPlayerRating","fetchPlayerRating","result","position","LeaderboardScopedOpen","openScoped","LeaderboardScopedFetch","fetchScoped","leaderboardScopedInfo","LeaderboardScopedPublishRecord","Score","Level","Exp","publishRecord","record","level","exp","LeaderboardScopedFetchPlayerRating","fetchPlayerRatingScoped","AchievementsOpen","AchievementsFetch","achievementsGroups","playerAchievements","AchievementsUnlock","idOrTag","parseInt","query","unlock","PaymentsFetchProducts","payments","fetchProducts","products","playerPurchases","PaymentsPurchase","purchase","PaymentsConsume","consume","PaymentsIsAvailable","isAvailable","FullscreenOpen","FullscreenClose","close","FullscreenToggle","AdsShowFullscreen","showFullscreen","AdsShowRewarded","showRewardedVideo","AdsShowPreloader","showPreloader","AdsShowSticky","showSticky","AdsCloseSticky","closeSticky","AdsRefreshSticky","refreshSticky","AdsIsAdblockEnabled","isAdblockEnabled","AdsIsStickyAvailable","isStickyAvailable","AdsIsFullscreenAvailable","isFullscreenAvailable","AdsIsRewardedAvailable","isRewardedAvailable","AdsIsPreloaderAvailable","isPreloaderAvailable","AdsIsStickyPlaying","isStickyPlaying","AdsIsFullscreenPlaying","isFullscreenPlaying","AdsIsRewardedPlaying","isRewardedPlaying","AdsIsPreloaderPlaying","isPreloaderPlaying","AnalyticsHit","analytics","hit","AnalyticsGoal","event","goal","SocialsShare","text","share","SocialsPost","post","SocialsInvite","invite","SocialsJoinCommunity","joinCommunity","SocialsCommunityLink","communityLink","SocialsIsSupportsNativeShare","isSupportsNativeShare","SocialsIsSupportsNativePosts","isSupportsNativePosts","SocialsIsSupportsNativeInvite","isSupportsNativeInvite","SocialsCanJoinCommunity","canJoinCommunity","SocialsIsSupportsNativeCommunityJoin","isSupportsNativeCommunityJoin","GamesCollectionsOpen","GamesCollectionsFetch","ChangeLanguage","changeLanguage","ChangeLanguageByCode","toLowerCase","ChangeAvatarGenerator","generator","changeAvatarGenerator","LoadOverlay","loadOverlay"],"sourceRoot":""}